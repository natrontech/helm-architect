// tslint:disable
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2023.10.2
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
    PolicyEngineMode,
    UserMatchingModeEnum,
} from './';

/**
 * LDAP Source Serializer
 * @export
 * @interface LDAPSourceRequest
 */
export interface LDAPSourceRequest {
    /**
     * Source\'s display Name.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    name: string;
    /**
     * Internal source name, used in URLs.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    slug: string;
    /**
     * @type {boolean}
     * @memberof LDAPSourceRequest
     */
    enabled?: boolean;
    /**
     * Flow to use when authenticating existing users.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    authentication_flow?: string | null;
    /**
     * Flow to use when enrolling new users.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    enrollment_flow?: string | null;
    /**
     * @type {PolicyEngineMode}
     * @memberof LDAPSourceRequest
     */
    policy_engine_mode?: PolicyEngineMode;
    /**
     * @type {UserMatchingModeEnum}
     * @memberof LDAPSourceRequest
     */
    user_matching_mode?: UserMatchingModeEnum;
    /**
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    user_path_template?: string;
    /**
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    server_uri: string;
    /**
     * Optionally verify the LDAP Server\'s Certificate against the CA Chain in this keypair.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    peer_certificate?: string | null;
    /**
     * Client certificate to authenticate against the LDAP Server\'s Certificate.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    client_certificate?: string | null;
    /**
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    bind_cn?: string;
    /**
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    bind_password?: string;
    /**
     * @type {boolean}
     * @memberof LDAPSourceRequest
     */
    start_tls?: boolean;
    /**
     * @type {boolean}
     * @memberof LDAPSourceRequest
     */
    sni?: boolean;
    /**
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    base_dn: string;
    /**
     * Prepended to Base DN for User-queries.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    additional_user_dn?: string;
    /**
     * Prepended to Base DN for Group-queries.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    additional_group_dn?: string;
    /**
     * Consider Objects matching this filter to be Users.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    user_object_filter?: string;
    /**
     * Consider Objects matching this filter to be Groups.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    group_object_filter?: string;
    /**
     * Field which contains members of a group.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    group_membership_field?: string;
    /**
     * Field which contains a unique Identifier.
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    object_uniqueness_field?: string;
    /**
     * @type {boolean}
     * @memberof LDAPSourceRequest
     */
    sync_users?: boolean;
    /**
     * When a user changes their password, sync it back to LDAP. This can only be enabled on a single LDAP source.
     * @type {boolean}
     * @memberof LDAPSourceRequest
     */
    sync_users_password?: boolean;
    /**
     * @type {boolean}
     * @memberof LDAPSourceRequest
     */
    sync_groups?: boolean;
    /**
     * @type {string}
     * @memberof LDAPSourceRequest
     */
    sync_parent_group?: string | null;
    /**
     * @type {Array<string>}
     * @memberof LDAPSourceRequest
     */
    property_mappings?: Array<string>;
    /**
     * Property mappings used for group creation/updating.
     * @type {Array<string>}
     * @memberof LDAPSourceRequest
     */
    property_mappings_group?: Array<string>;
}


