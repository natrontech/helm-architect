// tslint:disable
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2023.10.2
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
    LDAPAPIAccessMode,
} from './';

/**
 * LDAPProvider Serializer
 * @export
 * @interface LDAPProvider
 */
export interface LDAPProvider {
    /**
     * @type {number}
     * @memberof LDAPProvider
     */
    readonly pk: number;
    /**
     * @type {string}
     * @memberof LDAPProvider
     */
    name: string;
    /**
     * Flow used for authentication when the associated application is accessed by an un-authenticated user.
     * @type {string}
     * @memberof LDAPProvider
     */
    authentication_flow?: string | null;
    /**
     * Flow used when authorizing this provider.
     * @type {string}
     * @memberof LDAPProvider
     */
    authorization_flow: string;
    /**
     * @type {Array<string>}
     * @memberof LDAPProvider
     */
    property_mappings?: Array<string>;
    /**
     * Get object component so that we know how to edit the object
     * @type {string}
     * @memberof LDAPProvider
     */
    readonly component: string;
    /**
     * Internal application name, used in URLs.
     * @type {string}
     * @memberof LDAPProvider
     */
    readonly assigned_application_slug: string;
    /**
     * Application\'s display Name.
     * @type {string}
     * @memberof LDAPProvider
     */
    readonly assigned_application_name: string;
    /**
     * Internal application name, used in URLs.
     * @type {string}
     * @memberof LDAPProvider
     */
    readonly assigned_backchannel_application_slug: string;
    /**
     * Application\'s display Name.
     * @type {string}
     * @memberof LDAPProvider
     */
    readonly assigned_backchannel_application_name: string;
    /**
     * Return object\'s verbose_name
     * @type {string}
     * @memberof LDAPProvider
     */
    readonly verbose_name: string;
    /**
     * Return object\'s plural verbose_name
     * @type {string}
     * @memberof LDAPProvider
     */
    readonly verbose_name_plural: string;
    /**
     * Return internal model name
     * @type {string}
     * @memberof LDAPProvider
     */
    readonly meta_model_name: string;
    /**
     * DN under which objects are accessible.
     * @type {string}
     * @memberof LDAPProvider
     */
    base_dn?: string;
    /**
     * Users in this group can do search queries. If not set, every user can execute search queries.
     * @type {string}
     * @memberof LDAPProvider
     */
    search_group?: string | null;
    /**
     * @type {string}
     * @memberof LDAPProvider
     */
    certificate?: string | null;
    /**
     * @type {string}
     * @memberof LDAPProvider
     */
    tls_server_name?: string;
    /**
     * The start for uidNumbers, this number is added to the user.pk to make sure that the numbers aren\'t too low for POSIX users. Default is 2000 to ensure that we don\'t collide with local users uidNumber
     * @type {number}
     * @memberof LDAPProvider
     */
    uid_start_number?: number;
    /**
     * The start for gidNumbers, this number is added to a number generated from the group.pk to make sure that the numbers aren\'t too low for POSIX groups. Default is 4000 to ensure that we don\'t collide with local groups or users primary groups gidNumber
     * @type {number}
     * @memberof LDAPProvider
     */
    gid_start_number?: number;
    /**
     * @type {Array<string>}
     * @memberof LDAPProvider
     */
    readonly outpost_set: Array<string>;
    /**
     * @type {LDAPAPIAccessMode}
     * @memberof LDAPProvider
     */
    search_mode?: LDAPAPIAccessMode;
    /**
     * @type {LDAPAPIAccessMode}
     * @memberof LDAPProvider
     */
    bind_mode?: LDAPAPIAccessMode;
    /**
     * When enabled, code-based multi-factor authentication can be used by appending a semicolon and the TOTP code to the password. This should only be enabled if all users that will bind to this provider have a TOTP device configured, as otherwise a password may incorrectly be rejected if it contains a semicolon.
     * @type {boolean}
     * @memberof LDAPProvider
     */
    mfa_support?: boolean;
}


