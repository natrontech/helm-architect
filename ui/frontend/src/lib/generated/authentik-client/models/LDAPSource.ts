// tslint:disable
/**
 * authentik
 * Making authentication simple.
 *
 * The version of the OpenAPI document: 2023.10.2
 * Contact: hello@goauthentik.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type {
    PolicyEngineMode,
    UserMatchingModeEnum,
} from './';

/**
 * LDAP Source Serializer
 * @export
 * @interface LDAPSource
 */
export interface LDAPSource {
    /**
     * @type {string}
     * @memberof LDAPSource
     */
    readonly pk: string;
    /**
     * Source\'s display Name.
     * @type {string}
     * @memberof LDAPSource
     */
    name: string;
    /**
     * Internal source name, used in URLs.
     * @type {string}
     * @memberof LDAPSource
     */
    slug: string;
    /**
     * @type {boolean}
     * @memberof LDAPSource
     */
    enabled?: boolean;
    /**
     * Flow to use when authenticating existing users.
     * @type {string}
     * @memberof LDAPSource
     */
    authentication_flow?: string | null;
    /**
     * Flow to use when enrolling new users.
     * @type {string}
     * @memberof LDAPSource
     */
    enrollment_flow?: string | null;
    /**
     * Get object component so that we know how to edit the object
     * @type {string}
     * @memberof LDAPSource
     */
    readonly component: string;
    /**
     * Return object\'s verbose_name
     * @type {string}
     * @memberof LDAPSource
     */
    readonly verbose_name: string;
    /**
     * Return object\'s plural verbose_name
     * @type {string}
     * @memberof LDAPSource
     */
    readonly verbose_name_plural: string;
    /**
     * Return internal model name
     * @type {string}
     * @memberof LDAPSource
     */
    readonly meta_model_name: string;
    /**
     * @type {PolicyEngineMode}
     * @memberof LDAPSource
     */
    policy_engine_mode?: PolicyEngineMode;
    /**
     * @type {UserMatchingModeEnum}
     * @memberof LDAPSource
     */
    user_matching_mode?: UserMatchingModeEnum;
    /**
     * Objects that are managed by authentik. These objects are created and updated automatically. This flag only indicates that an object can be overwritten by migrations. You can still modify the objects via the API, but expect changes to be overwritten in a later update.
     * @type {string}
     * @memberof LDAPSource
     */
    readonly managed: string | null;
    /**
     * @type {string}
     * @memberof LDAPSource
     */
    user_path_template?: string;
    /**
     * Get the URL to the Icon. If the name is /static or starts with http it is returned as-is
     * @type {string}
     * @memberof LDAPSource
     */
    readonly icon: string | null;
    /**
     * @type {string}
     * @memberof LDAPSource
     */
    server_uri: string;
    /**
     * Optionally verify the LDAP Server\'s Certificate against the CA Chain in this keypair.
     * @type {string}
     * @memberof LDAPSource
     */
    peer_certificate?: string | null;
    /**
     * Client certificate to authenticate against the LDAP Server\'s Certificate.
     * @type {string}
     * @memberof LDAPSource
     */
    client_certificate?: string | null;
    /**
     * @type {string}
     * @memberof LDAPSource
     */
    bind_cn?: string;
    /**
     * @type {boolean}
     * @memberof LDAPSource
     */
    start_tls?: boolean;
    /**
     * @type {boolean}
     * @memberof LDAPSource
     */
    sni?: boolean;
    /**
     * @type {string}
     * @memberof LDAPSource
     */
    base_dn: string;
    /**
     * Prepended to Base DN for User-queries.
     * @type {string}
     * @memberof LDAPSource
     */
    additional_user_dn?: string;
    /**
     * Prepended to Base DN for Group-queries.
     * @type {string}
     * @memberof LDAPSource
     */
    additional_group_dn?: string;
    /**
     * Consider Objects matching this filter to be Users.
     * @type {string}
     * @memberof LDAPSource
     */
    user_object_filter?: string;
    /**
     * Consider Objects matching this filter to be Groups.
     * @type {string}
     * @memberof LDAPSource
     */
    group_object_filter?: string;
    /**
     * Field which contains members of a group.
     * @type {string}
     * @memberof LDAPSource
     */
    group_membership_field?: string;
    /**
     * Field which contains a unique Identifier.
     * @type {string}
     * @memberof LDAPSource
     */
    object_uniqueness_field?: string;
    /**
     * @type {boolean}
     * @memberof LDAPSource
     */
    sync_users?: boolean;
    /**
     * When a user changes their password, sync it back to LDAP. This can only be enabled on a single LDAP source.
     * @type {boolean}
     * @memberof LDAPSource
     */
    sync_users_password?: boolean;
    /**
     * @type {boolean}
     * @memberof LDAPSource
     */
    sync_groups?: boolean;
    /**
     * @type {string}
     * @memberof LDAPSource
     */
    sync_parent_group?: string | null;
    /**
     * @type {Array<string>}
     * @memberof LDAPSource
     */
    property_mappings?: Array<string>;
    /**
     * Property mappings used for group creation/updating.
     * @type {Array<string>}
     * @memberof LDAPSource
     */
    property_mappings_group?: Array<string>;
}


